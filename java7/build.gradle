
description = "PerfMark Java7 API"
ext.moduleName = "io.perfmark.javaseven"
ext.jdkVersion = JavaVersion.VERSION_1_7

compileJava {
    sourceCompatibility = jdkVersion
    targetCompatibility = jdkVersion

    options.compilerArgs.add("-Xlint:-options")
}

sourceSets {
    jmh {}
}


compileJmhJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    javaCompiler = javaToolchains.compilerFor({
        languageVersion = JavaLanguageVersion.of("11")
    })
}

dependencies {
    implementation project(':perfmark-impl')
    compileOnly libraries.jsr305

    jmhImplementation project(':perfmark-api'),
            project(':perfmark-impl'),
            project(':perfmark-java7'),
            project(':perfmark-testing')
    jmhImplementation libraries.junit
    jmhImplementation 'org.openjdk.jmh:jmh-core:1.32'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.32'
}

javadoc {
    exclude 'io/perfmark/java7**'
}

jar {
    exclude 'io/perfmark/java7/Internal*'
}

tasks.register('jmh', Test) {
    description = 'Runs integration tests.'
    group = 'stress'

    testClassesDirs = sourceSets.jmh.output.classesDirs
    classpath = sourceSets.jmh.runtimeClasspath

    javaLauncher = javaToolchains.launcherFor({
        languageVersion = JavaLanguageVersion.of("16")
    })
    //shouldRunAfter test
}