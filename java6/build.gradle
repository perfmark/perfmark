description = "PerfMark Java6 API"
ext.moduleName = "io.perfmark.javasix"
ext.jdkVersion = JavaVersion.VERSION_1_6

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileJava {
    sourceCompatibility = jdkVersion
    targetCompatibility = jdkVersion

    options.compilerArgs.add("-Xlint:-options")
}

sourceSets {
    jmh {}
}


compileJmhJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    javaCompiler = javaToolchains.compilerFor({
        languageVersion = JavaLanguageVersion.of("17")
    })
    options.errorprone.enabled = true
    options.errorprone.excludedPaths.set(".*/build/generated/sources/annotationProcessor/.*")
}

dependencies {
    implementation project(':perfmark-impl')
    compileOnly libs.jsr305

    testImplementation(project(":perfmark-api"))
    testImplementation(project(':perfmark-testing'))

    jmhImplementation project(':perfmark-api'),
            project(':perfmark-impl'),
            project(':perfmark-java6'),
            project(':perfmark-testing')
    jmhImplementation libs.junit
    jmhImplementation libs.jmhcore
    jmhAnnotationProcessor libs.jmhanno
}

tasks.register('jmh', Test) {
    description = 'Runs integration tests.'
    group = 'stress'

    testClassesDirs = sourceSets.jmh.output.classesDirs
    classpath = sourceSets.jmh.runtimeClasspath

    javaLauncher = javaToolchains.launcherFor({
        languageVersion = JavaLanguageVersion.of("17")
    })
    //shouldRunAfter test
}

javadoc {
    exclude 'io/perfmark/java6**'
}

jar {
    exclude 'io/perfmark/java6/Internal*'
}
