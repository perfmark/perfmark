description = "PerfMark Tracer Output"
ext.moduleName = "io.perfmark.tracewriter"
ext.jdkVersion = JavaVersion.VERSION_1_7

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.withType(JavaCompile) {
    sourceCompatibility = jdkVersion
    targetCompatibility = jdkVersion
}

dependencies {
    api project(':perfmark-impl')
    runtimeOnly project(':perfmark-java6')
    implementation project(':perfmark-api'),
            libraries.gson
    compileOnly libraries.jsr305,
            libraries.errorprone
}

jmh {
    timeOnIteration = "1s"
    warmup = "1s"
    fork = 1
    warmupIterations = 10

    /*
    profilers = ["perfasm"]

    jvmArgs = [
            "-XX:+UnlockDiagnosticVMOptions",
            "-XX:+LogCompilation",
            "-XX:LogFile=/tmp/blah.txt",
            "-XX:+PrintAssembly",
            "-XX:+PrintInterpreter",
            "-XX:+PrintNMethods",
            "-XX:+PrintNativeNMethods",
            "-XX:+PrintSignatureHandlers",
            "-XX:+PrintAdapterHandlers",
            "-XX:+PrintStubCode",
            "-XX:+PrintCompilation",
            "-XX:+PrintInlining",
            "-XX:+TraceClassLoading",
            "-XX:PrintAssemblyOptions=syntax",
            "-XX:PrintAssemblyOptions=intel"
    ]
   
     */
}
